function [modeSequence, switchTimes] = generateModeSequence(numSteps, params)
% GENERATEMODESEQUENCE - Creates realistic sequence of vessel motion modes
%
% This function generates a time sequence of motion modes that represents
% how real vessels change their motion patterns during a voyage. Vessels
% don't maintain the same motion type throughout - they alternate between
% steady cruise (CV), speed changes (CA), and course changes (CT).
%
% The sequence ensures:
% - Realistic mode durations (vessels don't change motion every second)
% - Weighted probabilities (CV mode is most common in practice)
% - Smooth transitions between different motion types
%
% INPUTS:
%   numSteps - Total number of simulation time steps
%   params   - Contains mode transition probability and minimum durations
%
% OUTPUTS:
%   modeSequence - Cell array of mode strings {'CV','CA','CT'} for each step
%   switchTimes  - Array of time steps where mode transitions occur

% DEFINE MOTION MODES
% CV = Constant Velocity (steady cruise, straight-line transit)
% CA = Constant Acceleration (speed changes, port approaches/departures)  
% CT = Constant Turn (course changes, maneuvering, obstacle avoidance)
modes = {'CV', 'CA', 'CT'};

% Initialize output arrays
modeSequence = cell(numSteps, 1);  % Mode for each time step
switchTimes = [];                  % Times when mode changes occur

% SELECT INITIAL MODE with realistic probabilities
% In real vessel operations, different modes have different frequencies:
% - CV (70%): Most time spent in steady cruise/transit
% - CA (15%): Occasional speed adjustments
% - CT (15%): Periodic course changes
currentMode = selectWeightedMode();

% Initialize mode timing variables
modeDuration = 0;  % How long current mode has been active
minDuration = ceil(params.modeTransition.minDuration / params.timeStep);  % Minimum mode duration in steps

fprintf('Motion Mode Generation:\n');
fprintf('  Total simulation steps: %d\n', numSteps);
fprintf('  Minimum mode duration: %.1f seconds (%d steps)\n', params.modeTransition.minDuration, minDuration);
fprintf('  Mode transition probability: %.3f per step\n', params.modeTransition.probability);

% GENERATE MODE SEQUENCE over time
for k = 1:numSteps
    % Assign current mode to this time step
    modeSequence{k} = currentMode;
    modeDuration = modeDuration + 1;  % Increment duration counter
    
    % CHECK FOR MODE TRANSITION
    % Transitions only occur if:
    % 1. Minimum duration has been met (realistic mode persistence)
    % 2. Random transition probability is satisfied (stochastic transitions)
    if modeDuration >= minDuration && rand() < params.modeTransition.probability
        % Attempt to select a new mode
        newMode = selectWeightedMode();
        
        % Only transition if the new mode is actually different
        % (avoids redundant "transitions" to the same mode)
        if ~strcmp(newMode, currentMode)
            currentMode = newMode;              % Switch to new mode
            switchTimes = [switchTimes; k];     % Record transition time
            modeDuration = 0;                   % Reset duration counter
            
            fprintf('  Mode switch at step %d: %s\n', k, currentMode);
        end
    end
end

fprintf('Mode Sequence Summary:\n');
fprintf('  Total mode transitions: %d\n', length(switchTimes));

% Calculate mode usage statistics
cvCount = sum(strcmp(modeSequence, 'CV'));
caCount = sum(strcmp(modeSequence, 'CA'));
ctCount = sum(strcmp(modeSequence, 'CT'));

fprintf('  CV mode: %d steps (%.1f%%)\n', cvCount, 100*cvCount/numSteps);
fprintf('  CA mode: %d steps (%.1f%%)\n', caCount, 100*caCount/numSteps);
fprintf('  CT mode: %d steps (%.1f%%)\n', ctCount, 100*ctCount/numSteps);

end

function mode = selectWeightedMode()
% SELECTWEIGHTEDMODE - Choose motion mode with realistic probabilities
%
% Real vessel operations show that certain motion types are much more
% common than others. This function implements weighted random selection
% to reflect realistic operational patterns:
%
% CV (Constant Velocity): 70% - Most common
%   - Long-distance transit, steady cruise
%   - Open ocean navigation, autopilot operation
%   
% CA (Constant Acceleration): 15% - Occasional  
%   - Port approaches/departures, speed adjustments
%   - Traffic management, weather response
%   
% CT (Constant Turn): 15% - Periodic
%   - Course changes, navigation waypoints
%   - Collision avoidance, channel following

    modes = {'CV', 'CA', 'CT'};
    weights = [0.70, 0.15, 0.15];  % Probabilities: 70% CV, 15% CA, 15% CT
    
    % Use cumulative probability method for weighted selection
    r = rand();  % Random number [0,1]
    cumWeight = 0;
    
    for i = 1:length(weights)
        cumWeight = cumWeight + weights(i);
        if r <= cumWeight
            mode = modes{i};
            return;
        end
    end
    
    % Fallback (should never reach here with proper weights)
    mode = 'CV';
end