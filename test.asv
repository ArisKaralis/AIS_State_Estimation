clear all;
close all;
clc;

dataPath = 'data/monte_carlo_sample.csv';
data = readtable(dataPath);

% Function to normalize angles to [0, 360) range
normalize_angle = @(angle) mod(angle, 360);

% Function to unwrap angles to prevent large jumps
unwrap_angles = @(angles) unwrap(angles * pi/180) * 180/pi;

% Normalize COG measurements and ground truth to [0, 360) range
cog_measured = normalize_angle(data.COG);
cog_true = normalize_angle(data.cog_true);

% Option 1: Plot normalized angles (0-360 range)
figure('Name', 'COG Analysis - Normalized');
subplot(2,1,1);
plot(cog_measured, 'r.', 'MarkerSize', 8, 'DisplayName', 'COG Measurements');
hold on;
plot(cog_true, 'k-', 'LineWidth', 2, 'DisplayName', 'COG Ground Truth');
xlabel('Sample number');
ylabel('Course (degrees)');
title('Course Over Ground - Normalized [0-360°]');
legend('Location', 'best');
grid on;
ylim([0 360]);

% Option 2: Plot unwrapped angles (continuous without jumps)
subplot(2,1,2);
cog_measured_unwrapped = unwrap_angles(cog_measured);
cog_true_unwrapped = unwrap_angles(cog_true);

plot(cog_measured_unwrapped, 'r.', 'MarkerSize', 8, 'DisplayName', 'COG Measurements');
hold on;
plot(cog_true_unwrapped, 'k-', 'LineWidth', 2, 'DisplayName', 'COG Ground Truth');
xlabel('Sample number');
ylabel('Course (degrees)');
title('Course Over Ground - Unwrapped (Continuous)');
legend('Location', 'best');
grid on;

% Display statistics
fprintf('COG Statistics:\n');
fprintf('Measured COG - Min: %.2f°, Max: %.2f°\n', min(cog_measured), max(cog_measured));
fprintf('True COG - Min: %.2f°, Max: %.2f°\n', min(cog_true), max(cog_true));
fprintf('Mean absolute error: %.2f°\n', mean(abs(cog_measured - cog_true)));

% Option 3: Plot error over time
figure('Name', 'COG Error Analysis');
cog_error = data.cog_error;
plot(cog_error, 'b-', 'LineWidth', 2);
xlabel('Sample number');
ylabel('COG Error (degrees)');
title('Course Over Ground Error Over Time');
grid on;